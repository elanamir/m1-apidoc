version: /v1


Auth: 

X-Auth-Token: XXXXX


Header:
response_id: string
data: {}  ???


Objects:
transcript_object{
}
transcript_source_object 
{
	source_data_type: 
		enum: pdf, image, json
		source_data: string uuencoded
}
student_object: {
	first_name:
	last_name: 
	schools: [{school_object}]
}

school_object: {
	name:
	school_id: 
}

report_object:
{
	name:
	report_id: 
	data: CSV array
}

webhook_object: {
	event_type: enum
	url: string
}


POST 	/transcripts/create
{
	student_id: string (optional)
	school_id: string 
	origin: "user", "school"
	transcript_source: transcript_source_object
	source_type: pdf/image/json/unknown...
	source_data: XXX 
}
{
	transcript_id: string
}
POST 	/transcripts/get
{
	source_data: boolean (default false)
}
{
[
{	
	transcript_id: string
	strudent_id: string
	school_id: string
	transcript_data: transcript_object {
	}
	source_type: string (optional)
	source_data: string (optional)
}...
]
}
POST 	/transcripts/update
{
[
	transcript_id: string
	student_id: string (optional)
	school_id: string (optional)
	source_type: string (optional)
	source_data: string (optional)
]
}
{}
POST 	/transcripts/delete
{
	transcript_id: string
}
{
}

POST 	/transcripts/get_by_id
{
	transcript_id: string
}
{
	transcript_object: 
}
POST  /transcripts/webhook
{
	event_id: string 
	transcript_id: string (optional)
	webhook: string
}
{}


POST /analytics/get
{
	# get all models
}

POST 	/analytics/meritscore
{
	model_version:
}
POST 	/analytics/gradscore

POST 	/students/create
POST 	/students/get_by_id
POST 	/students/update
POST 	/students/delete


POST /reports/get
POST /reports/get_by_id



POST /transcript/create
{
	client_id:
	raw: string (uuencoded)
	normalize: boolean
}

POST /transcript/gradscore 
{
	
}

POST /school/geturl 
{
	
}

POST /school/get 
{
	
}

/student/

